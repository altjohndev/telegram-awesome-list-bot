## "msgid"s in this file come from POT (.pot) files.
##
## Do not add, change, or remove "msgid"s manually here as
## they're tied to the ones in the corresponding POT file
## (with the same domain).
##
## Use "mix gettext.extract --merge" or "mix gettext.merge"
## to merge POT files into PO files.
msgid ""
msgstr ""
"Language: en_US\n"
"Plural-Forms: nplurals=2\n"

#, elixir-format
#: lib/talbot_client/commands/help.ex:372
msgid "I am here to help!\n\n<code>abbr</code> is the field for abbreviations. It is used to identify items, sub-categories, and categories.\n\nThe pattern of an abbreviation is <b>snake_case</b>, this means that every time you perform an input of abbreviation, I will change it to be lowercased and with underline:\n\n- Movies will become movies\n\n- MoViEs will become mo_vi_es\n\n- \"I robot\" will become i_robot\n\nAfter that, if it is a creation or update, I will verify if it has at most 20 characters.\n"
msgstr ""

#, elixir-format
#: lib/talbot_client/commands/help.ex:444
msgid "I am here to help!\n\n<code>archived</code> is the field responsible to enable or disable an item.\n\nAn archived item will not be used on random selection operations and will be <s>striked</s> on listings.\n\nExamples of usage:\n\n- Define a task as done from a to-do list.\n\n- Define a movie as watched.\n"
msgstr ""

#, elixir-format
#: lib/talbot_client/commands/help.ex:416
msgid "I am here to help!\n\n<code>description</code> is the field that can be used to insert additional information about items, sub-categories, and categories.\n\nA description should have at most 100 characters.\n"
msgstr ""

#, elixir-format
#: lib/talbot_client/commands/help.ex:429
msgid "I am here to help!\n\n<code>reference</code> is the field that can be used to add links to items.\n\nIf it is a valid link, I will show it as a link when showing items.\n\nA reference should have at most 100 characters.\n"
msgstr ""

#, elixir-format
#: lib/talbot_client/commands/help.ex:463
msgid "I am here to help!\n\n<code>selected</code> is the field responsible to select or deselect items.\n\nA selected item will have a checkmark (<code>[X]</code>) on listings.\n\nAn unselected item will not have a checkmark (<code>[ ]</code>) on listings.\n\nExamples of usage:\n\n- Define a task as doing from a to-do list.\n\n- Define a movie as \"watching\".\n"
msgstr ""

#, elixir-format
#: lib/talbot_client/commands/help.ex:53
msgid "I am here to help!\n\nA category is a collection of sub-categories and items.\n\n<b>- Creating a category</b>\n\nA category is identified according to the abbreviation (<code>abbr</code>) defined on creation. To learn more about <code>abbr</code>, use the command:\n\n<code>/help abbr</code>\n\nTo create a new category, use the command /n (or /new ). The pattern is:\n\n<code>/n {abbr}</code>\n\nFor example:\n\n<code>/n movies</code>\n\nWill create a category with the abbreviation <b>movies</b>.\n\n<b>- Updating a category</b>\n\nIt is possible to set a custom name (<code>name</code>) and a description (<code>description</code>) on update.\n\nTo learn more about <code>name</code>, use the command:\n\n<code>/help name</code>\n\nTo learn more about <code>description</code>, use the command:\n\n<code>/help description</code>\n\nTo update a category, use the command /e (or /edit ). The pattern is:\n\n<code>/e {abbr} {change_what} {the_change}</code>\n\nFor example:\n\n<code>/e movies description A catalog of movies to watch</code>\n\nWill update the description of the category with the abbreviation <b>movies</b> to \"A catalog of movies to watch\".\n\nThe fields you can change are: <code>abbr</code>, <code>name</code>, and <code>description</code>\n\n<b>- Listing categories</b>\n\nTo list all categories, use the command /l (or /list ).\n\nTo get a list with <code>abbr</code> included, use the command /la (or /listwithabbr ).\n\n<b>- Removing a category</b>\n\nTo remove a category, use the command /d (or /delete ). The pattern is:\n\n<code>/d {abbr}</code>\n\nFor example:\n\n<code>/d movies</code>\n\nWill remove the category with abbreviation as <b>movies</b>.\n\n<b>- Information about a category</b>\n\nTo show more information about a category, use the command /s (or /show). The pattern is:\n\n<code>/s {abbr}</code>\n\nFor example:\n\n<code>/s movies</code>\n\nWill show detailed information about the category with abbreviation as <b>movies</b>.\n"
msgstr ""

#, elixir-format
#: lib/talbot_client/commands/help.ex:28
msgid "I am here to help!\n\nMy purpose is to manage categories, their sub-categories, and their items.\n\nA category is a collection of sub-categories and items. To learn more about categories, use the command:\n\n<code>/help category</code>\n\nA sub-category is a collection of items from a category. To learn more about sub-categories, use the command:\n\n<code>/help subcategory</code>\n\nAn item is something that can be listed, selected, and archived. It is always associated with a category, and can be associated with a sub-category from the category. To learn more about items, use the command:\n\n<code>/help item</code>\n\nFor example of usage, the command /start can guide you.\n"
msgstr ""

#, elixir-format
#: lib/talbot_client/commands/start.ex:16
msgid "I am ready!\n\nStart by creating a category with the /n command.\n\nFor example:\n\n<code>/n movies</code>\n\n<code>/n FoodsAndDrinks</code>\n\nThen, create a sub-category.\n\nFor example:\n\n<code>/n movies drama</code>\n\n<code>/n foods_and_drinks desserts</code>\n\nFinally, create an item.\n\nFor example:\n\n<code>/n movies drama ai</code>\n\n<code>/n movies . fight club</code>\n\n<code>/n foods_and_drinks desserts ice cream</code>\n\n<code>/n foods_and_drinks . pizza</code>\n\nFor more information about commands, please use the /help command.\n"
msgstr ""

#, elixir-format, fuzzy
#: lib/talbot_client/commands/help.ex:393
msgid "I am here to help!\n\n<code>name</code> is the field responsible to name items, sub-categories, and categories.\n\nOn creation, I will automatically define a name for the element based on the <code>abbr</code>.\n\nThe pattern of a name is <b>Title Case</b>, this means that every time you perform an input of name, I will change it to have the first letter of every word upcased, otherwise downcased:\n\n- movies will become Movies\n\n- foods_and_drinks will become \"Foods And Drinks\"\n\n- \"I, robot\" will become \"I, Robot\"\n\nA name should have at most 100 characters.\n"
msgstr ""

#, elixir-format, fuzzy
#: lib/talbot_client/commands/help.ex:134
msgid "I am here to help!\n\nA sub-category is a collection of items from a category.\n\n<b>- Creating a sub-category</b>\n\nA sub-category is identified according to the abbreviation (<code>abbr</code>) defined on creation. To learn more about <code>abbr</code>, use the command:\n\n<code>/help abbr</code>\n\nTo create a new sub-category, use the command /n (or /new ). The pattern is:\n\n<code>/n {category_abbr} {abbr}</code>\n\nFor example:\n\n<code>/n movies drama</code>\n\nWill create a sub-category with the abbreviation <b>drama</b> from the category with the abbreviation <b>movies</b>.\n\n<b>- Updating a sub-category</b>\n\nIt is possible to set a custom name (<code>name</code>) and a description (<code>description</code>) on update.\n\nTo learn more about <code>name</code>, use the command:\n\n<code>/help name</code>\n\nTo learn more about <code>description</code>, use the command:\n\n<code>/help description</code>\n\nTo update a sub-category, use the command /e (or /edit ). The pattern is:\n\n<code>/e {category_abbr} {abbr} {change_what} {the_change}</code>\n\nFor example:\n\n<code>/e movies drama description Movies to cry a river</code>\n\nWill update the description of the sub-category with the abbreviation <b>drama</b> from the category with the abbreviation <b>movies</b> to \"Movies to cry a river\".\n\nThe fields you can change are: <code>abbr</code>, <code>name</code>, and <code>description</code>\n\n<b>- Listing sub-categories</b>\n\nTo list all sub-categories from a category, use the command /l (or /list ). The pattern is:\n\n<code>/l {category_abbr}</code>\n\nFor example:\n\n<code>/l movies</code>\n\nWill list all sub-categories from the category with the abbreviation as <b>movies</b>.\n\nTo get a list with <code>abbr</code> included, use the command /la (or /listwithabbr ).\n\n<b>- Removing a sub-category</b>\n\nTo remove a sub-category, use the command /d (or /delete ). The pattern is:\n\n<code>/d {category_abbr} {abbr}</code>\n\nFor example:\n\n<code>/d movies drama</code>\n\nWill remove the sub-category with abbreviation as <b>drama</b> from the category with abbreviation as <b>movies</b>.\n\n<b>- Information about a sub-category</b>\n\nTo show more information about a sub-category, use the command /s (or /show). The pattern is:\n\n<code>/s {category_abbr} {abbr}</code>\n\nFor example:\n\n<code>/s movies drama</code>\n\nWill show detailed information about the sub-category with abbreviation as <b>drama</b> from the category with abbreviation as <b>movies</b>.\n"
msgstr ""

#, elixir-format, fuzzy
#: lib/talbot_client/commands/help.ex:223
msgid "I am here to help!\n\nAn item is something that can be listed, selected, and archived. It is always associated with a category, and can be associated with a sub-category from the category.\n\n<b>- Creating an item</b>\n\nAn item is identified according to the abbreviation (<code>abbr</code>) defined on creation. To learn more about <code>abbr</code>, use the command:\n\n<code>/help abbr</code>\n\nTo create a new item, use the command /n (or /new ). The pattern is:\n\n<code>/n {category_abbr} {sub_category_abbr} {abbr}</code>\n\nFor example:\n\n<code>/n movies drama ai</code>\n\nWill create an item with the abbreviation <b>ai</b>.\n\nTo create an item without a sub-category, simply replace the <code>{sub_category_abbr}</code> with <code>.</code> (a dot). This statement is valid for every command related to items.\n\n<b>- Updating an item</b>\n\nIt is possible to set a custom name (<code>name</code>), description (<code>description</code>), reference (<code>reference</code>), or sub-category (<code>subcategory</code>) on update.\n\nTo learn more about <code>reference</code>, use the command:\n\n<code>/help reference</code>\n\nTo update an item, use the command /e (or /edit ). The pattern is:\n\n<code>/e {category_abbr} {abbr} {change_what} {the_change}</code>\n\nFor example:\n\n<code>/e movies drama ai name Artificial Intelligence</code>\n\nWill update the name of the item with the abbreviation <b>ai</b> to \"Artificial Intelligence\".\n\nThe fields you can change are: <code>abbr</code>, <code>name</code>, <code>description</code>, <code>reference</code>, and <code>subcategory</code>.\n\n<b>- Updating selection of items</b>\n\nItems can be selected and deselected with the command /se (or /select ). The pattern is:\n\n<code>/se {category_abbr} {sub_category_abbr} {abbr}</code>\n\nFor example:\n\n<code>/se movies</code>\n\nWill select every item from the category with abbreviation as <b>movies</b>. If all items are already selected, this command will deselect, instead.\n\n<code>/se movies drama</code>\n\nWill select every item from sub-category with abbreviation as <b>drama</b>. If all items are already selected, this command will deselect, instead.\n\n<code>/se movies drama ai</code>\n\nWill select the item with abbreviation as <b>ai</b>. If the item is already selected, this command will deselect, instead.\n\nTo learn more about the <code>select</code> attribute, use the command:\n\n<code>/help select</code>\n\nAdditionaly you can randomly select an item from a category or sub-category with the command /sr (or /selectrandom ). The pattern is:\n\n<code>/sr {category_abbr} {sub_category_abbr}</code>\n\nFor example:\n\n<code>/sr movies</code>\n\nWill select a random item from the category with abbreviation as <b>movies</b>.\n\n<code>/sr movies drama</code>\n\nWill select a random item from the sub-category with abbreviation as <b>drama</b>.\n\n<b>- Archiving items</b>\n\nItems can be archived with /ar (or /archive ). The pattern is:\n\n<code>/ar {category_abbr} {sub_category_abbr} {abbr}</code>\n\nFor example:\n\n<code>/ar movies</code>\n\nWill archive every item from the category with abbreviation as <b>movies</b>. If all items are already archived, this command will de-archive, instead.\n\n<code>/ar movies drama</code>\n\nWill archive every item from sub-category with abbreviation as <b>drama</b>. If all items are already archived, this command will de-archive, instead.\n\n<code>/ar movies drama ai</code>\n\nWill archive the item with abbreviation as <b>ai</b>. If the item is already archived, this command will de-archive, instead.\n\nTo learn more about the <code>archive</code> attribute, use the command:\n\n<code>/help archive</code>\n\n<b>- Listing items</b>\n\nTo list all items from a category or sub-category, use the command /l (or /list ). The pattern is:\n\n<code>/l {category_abbr} {sub_category_abbr}</code>\n\nFor example:\n\n<code>/l movies drama</code>\n\nWill list all items from the sub-category with the abbreviation as <b>drama</b>.\n\nTo get a list with <code>abbr</code> included, use the command /la (or /listwithabbr ).\n\n<b>- Removing an item</b>\n\nTo remove an item, use the command /d (or /delete ). The pattern is:\n\n<code>/d {category_abbr} {sub_category_abbr} {abbr}</code>\n\nFor example:\n\n<code>/d movies drama ai</code>\n\nWill remove the item with abbreviation as <b>ai</b>.\n\n<b>- Information about an item</b>\n\nTo show more information about an item, use the command /s (or /show). The pattern is:\n\n<code>/s {category_abbr} {sub_category_abbr} {abbr}</code>\n\nFor example:\n\n<code>/s movies drama ai</code>\n\nWill show detailed information about the item with abbreviation as <b>ai</b>.\n"
msgstr ""
